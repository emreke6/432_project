#include <stdio.h>
#include <time.h>
#include <unistd.h>
#include <stdlib.h>
#include <conio.h> //for cls
#include <string.h>
#define SIZE 1000

float player1ScoreGlobal=0;
float player2ScoreGlobal=0;

int ifWin(char squares[])//Oyunculardan biri kazandımı diye bakan fonksiyon
{
    if((squares[1]==squares[2] && squares[2]==squares[3])||(squares[4] == squares[5] && squares[5] == squares[6])||(squares[7] == squares[8] && squares[8] == squares[9])||(squares[1] == squares[4] && squares[4] == squares[7])||(squares[2] == squares[5] && squares[5] == squares[8])||(squares[3] == squares[6] && squares[6] == squares[9])||(squares[1] == squares[5] && squares[5] == squares[9])||(squares[3] == squares[5] && squares[5] == squares[7]))
        return 1;       
    
	else if (squares[1] != '1' && squares[2] != '2' && squares[3] != '3' &&
        squares[4] != '4' && squares[5] != '5' && squares[6] != '6' && squares[7] 
        != '7' && squares[8] != '8' && squares[9] != '9') {
		 return 0;
	}
    
	else
        return -1;
}

void redColor() {
  printf("\033[1;31m");
}

void cyanColor() {
  printf("\x1b[36m");
}

void purpleColor() { 
  printf("\033[1;35m");
}

void greenColor() {
	printf("\x1b[32m");
}

void resetColor() {
  printf("\033[0m");
}

void drawBoard(const char username1[],const char username2[],char squares[],int turn) {
	
	
    printf("\n\n\tWelcome to X O X \n\n");

	printf("       %s (X) - %s (O)\n\n",username1,username2);
    printf("             Turn %d",turn);
    printf("\n\n\n");

    printf("             |     |     \n");
    printf("          %c  |  %c  |  %c \n", squares[1], squares[2], squares[3]);

    printf("        _____|_____|_____\n");
    printf("             |     |     \n");

    printf("          %c  |  %c  |  %c \n", squares[4], squares[5], squares[6]);

    printf("        _____|_____|_____\n");
    printf("             |     |     \n");

    printf("          %c  |  %c  |  %c \n", squares[7], squares[8], squares[9]);

    printf("             |     |     \n\n");
    puts("");
}


void startTimer(int second,int minute,int hour) {
	
	hour=0;
	minute=0;
	second=0;
	
	while(hour<24)
	{
		system("cls");
		greenColor();
		resetColor();
		if(second%3==0)
		{
			cyanColor();
			printf("\r%02d : %02d : %02d",hour,minute,second);
		}
		else if(second%3==1)
		{
			redColor();
			printf("\r%02d : %02d : %02d",hour,minute,second);
		}
		else
		{
			purpleColor();
			printf("\r%02d : %02d : %02d",hour,minute,second);
		}
		
		fflush(stdout);
		second=second+1;
		if(second==60)
		{
			minute+=1;
			second=0;
		}
		if(minute==60)
		{
			hour+=1;
			minute=0;
		}
		if(hour==24)
		{
			hour=0;
			minute=0;
			second=0;
		}
		sleep(1);
	}	
}

void playGame(char username1[],char username2[],char squares[],int limit) {
	
	int turn, i, choice, player,a;
    int gameCounter = 0;
    char mark; // X ve O işaretleri
    turn = 1; //Tur sayısı
    i=0;
    char squares2[10];
    
    for(a=1;a<10;a++) // Oyun tahtasını squares2 arrayine kopyalayan loop
    {
    	squares2[a] = squares[a];
	}
		
	do
    {
    	system("cls");
        drawBoard(username1,username2,squares2,turn);
        
		if(turn % 2 == 1) {
			player = 1;
		} 
		else {
			player = 2;
		}
		
		if(player==1) {
			mark='X';
		}
		else {
			mark='O';
		} 

        printf("Player %d, enter your square choice:  ", player);
        scanf("%d", &choice);

		if (squares2[choice] == (choice + '0')) {
        	
			squares2[choice]=mark;
		}    
        else
        {
            printf("Player %d made invalid move.",player);
            getch();
        }
        i = ifWin(squares2); //Kazanan varmı diye kontrol eden fonksiyon
        turn++;
    }while (i < 0);
    
    drawBoard(username1,username2,squares2,turn); //Oyun sonu tahtayı göstermek için
    
    if (i == 1) {
    	if(player==1) {
    		++player1ScoreGlobal;
        	printf("==>\a%s won the game. ",username1);
        	getch();

		}
		else if(player==2) {
			++player2ScoreGlobal;
			printf("==>\a%s won the game. ",username2);
			getch();
		}
    else {
    	player1ScoreGlobal = player1ScoreGlobal + 0.5;
    	player2ScoreGlobal = player2ScoreGlobal + 0.5;
        printf("==>\aGame is draw.");
    	getch();
    	}
    	
	}
}

int main(void)
{
	char *filename = "Game Results.txt";
	char squares[10] = { '0','1','2','3','4','5','6','7','8','9'}; //Oyun tahtası olarak kullandığımız array	
	char username1[SIZE]; //Player1'in kullanıcı adı
	char username2[SIZE]; //Player2'nin kullanıcı adı
    int limit; //Girilen oyun limiti
    int gameCounter = 0; //Oyun sayacı
    float playAgainUser1=0;
    float playAgainUser2=0;
    int menuChoose=0; //Ana menü seçeneği
    char mark; // X ve O işaretleri
    
    printf("\n           Menu");
    puts("");
    puts("");
    printf("    ------------------\n    | Play Game (1)  |\n    ------------------\n    | Scoreboard (2) |\n    ------------------\n    | Exit Game (0)  |\n    ------------------"); //Ana menü 
    printf("\n\nPlease enter a number: "); //Ana menü seçenek girişi
    scanf("%d",&menuChoose);
    
	if(menuChoose==1) {
    printf("\nPlayer1 please enter your username: ");
    getchar();
   	gets(username1);
    
    printf("\nPlayer2 please enter your username: ");
    gets(username2);
    
    printf("\nPlease enter match limit:");
    scanf("%d",&limit);
    
    for(gameCounter =0;gameCounter<limit;gameCounter++){
    	
    	playGame(username1,username2,squares,limit);
	}
PlayAgain:	
	printf("\n%s do you want to play again(Yes --> 1 No --> 0): ",username1);
	scanf("%d",&playAgainUser1);
	printf("\n%s do you want to play again(Yes --> 1 No --> 0): ",username2);
	scanf("%d",&playAgainUser2);
	
	if(playAgainUser1==1 && playAgainUser2==1)
	{
		printf("\nBoth players want to play again. Game is starting.");
		getch();
		playGame(username1,username2,squares,1);
		goto PlayAgain;
	}
	else if(playAgainUser1==0 && playAgainUser2==1)
	{
		printf("\n%s doesn't want to play. Game is over.",username1);
	}
	else if(playAgainUser1==1 && playAgainUser2==0)
	{
		printf("\n%s doesn't want to play. Game is over.",username2);
	}
	else if(playAgainUser1==0 && playAgainUser2==0)
	{
		printf("\nBoth players don't want to play. Game is over.");
	}
}
	
	else if(menuChoose==2) { 
		printf("Scoreboard");
	}
	
	else if(menuChoose==0) {
		printf("Program is closed.\n");
		system("pause");
	}
	
	printf("\n\n%s score is %.2f\n",username1,player1ScoreGlobal);
	printf("%s score is %.2f\n",username2,player2ScoreGlobal);
	
	
	//Skorları .txt dosyasına yazdırma
	if(1==0){
	FILE *fp = fopen(filename, "w");
	if (fp == NULL) {
       	printf("Error opening the file %s", filename);
    }

   {
        fprintf(fp, "Scores:\n\n%s = %.2f\n\n%s = %.2f",username1,player1ScoreGlobal,username2,player2ScoreGlobal);
    }
        
    fclose(fp);
	}
}
